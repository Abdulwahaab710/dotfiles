#!/usr/bin/env sh

function get_top_padding_value() {
  local display_details=$(yabai -m query --displays --display)
  local screen_width=$(echo $display_details | jq '.frame | .w')
  local screen_height=$(echo $display_details | jq '.frame | .h')
  if [ $screen_width -eq 1800 ] && [ $screen_height -eq 1169 ]; then
    echo 0
  else
    echo 30
  fi
}

# global settings
yabai -m config mouse_follows_focus          on
yabai -m config focus_follows_mouse          autoraise
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_opacity               off
yabai -m config window_shadow                on
yabai -m config window_border                on
yabai -m config window_border_width          4
yabai -m config window_border_radius         11
# yabai -m config active_window_border_color   0xff775759
yabai -m config active_window_border_color   0xffa5d37c
yabai -m config normal_window_border_color   0xff505050
yabai -m config insert_window_border_color   0xffd75f5f
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  $(get_top_padding_value)
yabai -m config bottom_padding               0
yabai -m config left_padding                 35
yabai -m config right_padding                35
yabai -m config window_gap                   2
yabai -m config window_animation_duration    2

# Space labels
yabai -m space 1 --label "Primary"
yabai -m space 2 --label "Comms"
yabai -m space 3 --label "Tools"
yabai -m space 4 --label "Media"
yabai -m space 5 --label "Social"
yabai -m space 6 --label "Float"
yabai -m space 7 --label "Secondary"

# Space config
yabai -m config --space 6 layout float

# Unmanaged
yabai -m rule --add app="^System Preferences$"  manage=off border=off

# Primary
yabai -m rule --add app="Brave Browser"                       space=1
yabai -m rule --add app="kitty"                               space=1
yabai -m rule --add app="Preview"                             space=1
yabai -m rule --add app="Simulator"                           space=1
yabai -m rule --add app="Burp Suite Professional"             space=1
yabai -m rule --add app="Burp Suite Community Edition"        space=1

# Communication
yabai -m rule --add app="Slack"                 space=2
yabai -m rule --add app="Messages"              space=2

# Tools
yabai -m rule --add app="Finder"                space=3
yabai -m rule --add app="Sequel Ace"            space=3
yabai -m rule --add app="Activity Monitor"      space=3
yabai -m rule --add app="App Store"             space=3
yabai -m rule --add app="Terminal"              space=3

# Media
yabai -m rule --add app="Music"                 space=4
yabai -m rule --add app="QuickTime Player"      space=4
yabai -m rule --add app="VLC"                   manage=off space=4
yabai -m rule --add app="Spotify"               space=4

# Social
yabai -m rule --add app="Discord"               space=5
yabai -m rule --add app="WhatsApp"              space=5
yabai -m rule --add app="Signal"                space=5

# Floating
yabai -m rule --add app="^System Preferences$"  space=6

echo "yabai configuration loaded.."

yabai -m signal --add event=display_changed action="yabai -m config top_padding \$(yabai -m query --displays --display | jq \".frame | if (.h == 1169 and .w == 1800) then 0 else 30 end\")"

#############
# Übersicht
#############

# # Refresh spaces widget on space change
# yabai -m signal --add event=space_changed action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh spaces widget on display focus change
# yabai -m signal --add event=display_changed action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh process widget on space change
# yabai -m signal --add event=space_changed action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Uncomment next line to enable spaces widget refresh on your 2nd monitor
# # yabai -m signal --add event=space_changed action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-spaces-2-jsx\"'"
#
# # Refresh process widget on when focused application changes
# yabai -m signal --add event=application_front_switched action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when focused application changes
# yabai -m signal --add event=application_front_switched action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
#
# # Refresh process widget on when an application window is closed
# yabai -m signal --add event=window_destroyed action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when an application window is closed
# yabai -m signal --add [event=window_destroyed action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"


#############
# Sketchybar
#############

yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"
